g[g$Graded. == FALSE, "Student.Name"]
gg = g[g$Graded. == T,] # only look at graded quizes
# show stats
mean = round(mean(gg$grades,na.rm= T),2)
print(paste("Mean:  ", mean, sep =""))
median = round(median(gg$grades),2)
print(paste("Median:   ", median, sep =""))
p90 = round(sum(gg$over90)/dim(gg)[1],2)
print(paste("prop over 90: ", p90 , sep =""))
95/18
6.9/4.24
5.28/1.6
5.28/1.627
18^.5
##Activity 7 Analysis
#M.Lewis 2/9/13
rm(list=ls())
#Load libraries
library(lme4)
library(stringr)
library(ggplot2)
library(bootstrap)
theta <- function(x,xdata,na.rm=T) {mean(xdata[x],na.rm=na.rm)}
ci.low <- function(x,na.rm=T) {
mean(x,na.rm=na.rm) - quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,.025,na.rm=na.rm)}
ci.high <- function(x,na.rm=T) {
quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,.975,na.rm=na.rm) - mean(x,na.rm=na.rm)}
##Read in data
setwd('//Documents/CaLL/from work computer/Experiments/Activity/Paper:Presentation/Paper/Language and Cognition/Analysis/data/')
M1 = read.table("A7_results_male1.txt", header = TRUE, fill = TRUE)
M1$gender = 'M'
M2 = read.table("A7_results_male2.txt", header = TRUE, fill = TRUE)
M2$gender = 'M'
F1 = read.table("A7_results_female1.txt", header = TRUE, fill = TRUE)
F1$gender = 'F'
F2 = read.table("A7_results_female2.txt", header = TRUE, fill = TRUE)
F2$gender = 'F'
F3 = read.table("A7_results_female3.txt", header = TRUE, fill = TRUE)
F3$gender = 'F'
#merge all datasets  together
d <- rbind(M1, M2, F1, F2, F3)
#extra condition and item information
d$SubjectNum <- as.factor(sapply(str_split(matrix(sapply(str_split(d$Filename,"S"),function(x) {x[2]})),"-"),function(x){x[1]}))
d$Condition<- as.factor(sapply(str_split(matrix(sapply(str_split(d$Filename,"_"),function(x) {x[2]})),"_"),function(x){x[1]}))
d$TrialNum<- as.factor(sapply(str_split(d$Filename,"N"),function(x) {x[2]}))
d$Distractor<- as.factor(sapply(str_split(matrix(sapply(str_split(d$Filename,"D_"),function(x) {x[2]})),"-"),function(x){x[1]}))
d$Target<- as.factor(sapply(str_split(matrix(sapply(str_split(d$Filename,"T_"),function(x) {x[2]})),"-"),function(x){x[1]}))
d$gender <- as.factor(d$gender)
#add NAs
d$TargetMax <- ifelse(d$TargetMax == '--undefined--', NA, d$TargetMax)
d$TargetMin <- ifelse(d$TargetMin == '--undefined--', NA, d$TargetMin)
d$TargetPitch <- ifelse(d$TargetPitch == '--undefined--', NA, d$TargetPitch)
d$TargetDifference<- ifelse(d$TargetDifference == '--undefined--', NA, d$TargetDifference)
d$TargetIntensity <- as.numeric(as.character(d$TargetIntensity)) #make intensity numeric
#reorder  labels
d$Segmentlabel = factor(d$Segmentlabel, levels = c("o",'co',"p","c","v","pv"))
#levels(d$Segmentlabel) <- c("onset",'\"click on\"','\"the person\"  ','(\"that\'s\")',"verb","post-verb") # for graphing only
#### Stats for paper
#Set up contrast codes
#gender
counttotal = length(d$gender)
countM = length(d$gender[d$gender=='M'])
countF = length(d$gender[d$gender=='F'])
weightF = countM/counttotal
weightM = countF/counttotal
contrasts(d$gender) <- cbind(c(weightF,-1*weightM))
contrasts(d$gender) # display to check
#condition
contrasts(d$Condition) = c(-.5,.5)
contrasts(d$Condition) # check
#
##Activity 6 Analysis
#M.Lewis 11/8/12
#Load libraries
library(languageR)
##Read in data
d = read.csv("/Documents/CaLL/from work computer/Experiments/Activity/Data_Organized/Experiment #6/Data/Praat_output/Activity6_data.csv")
summary(d)
#Read in item data
item = read.csv("/Documents/CaLL/from work computer/Experiments/Activity/Data_Organized/Experiment #6/a6_item_data.csv")
summary(item)
# Norms
loud = read.csv('/Documents/CaLL/from work computer/Experiments/Activity/Data_Organized/Norming Studies/data/loudness_item_means.csv')
effort = read.csv('/Documents/CaLL/from work computer/Experiments/Activity/Data_Organized/Norming Studies/data/effort_item_means.csv')
#####################
#DATA PREP
# Add subject column
d$Subject = substr(d$Filename, regexpr("S",d$Filename)+1, regexpr("T",d$Filename)-1)
d$Subject <- as.factor(d$Subject)
summary(d)
# Add item column
d$Item = substr(d$Filename, regexpr("T",d$Filename)+1, regexpr("W",d$Filename)-1)
d$Item <- as.numeric(d$Item)
d$Item <- as.factor(d$Item)
summary(d)
# Add word column
d$words = substr(d$Filename, regexpr("W",d$Filename)+1, regexpr("_",d$Filename)-1)
d$words<- as.factor(d$words)
summary(d)
# Add item information
index <- match(d$words, item$words)
d$syllables <- item$syllables[index]
d$Lg10WF  <- item$Lg10WF[index]
d$filler_activity  <- item$filler_activity[index]
# Remove strange duplicates
d=subset(d, d$Segmentlabel != '0')
d=subset(d, d$Filename != 'S510T7Wstaring_F_')
d= d[d$Segmentlabel != 'sky-ing',]
summary(d)
# MERGE NORMS
index <- match(d$words, loud$word)
d$loud <- loud$rating[index]
index <- match(d$words, effort$word)
d$effort <- effort$rating[index]
# Add condition information
d$Condition2 <- ifelse(
d$word == 'cheering'
|d$word == 'hollering'
|d$word == 'screaming'
|d$word == 'shouting'
|d$word == 'singing'
|d$word == 'yelling',
'hv', ifelse(
d$word == 'chatting'
|d$word == 'discussing'
|d$word == 'gossiping'
|d$word == 'mumbling'
|d$word == 'talking'
|d$word == 'whispering',
'lv', ifelse(
d$word == 'debating'
|d$word == 'lecturing'
|d$word == 'arguing',
'hvn', ifelse(
d$word == 'articulating'
|d$word == 'babbling'
|d$word == 'bantering'
|d$word == 'commenting'
|d$word == 'conversing'
|d$word == 'mentioning'
|d$word == 'muttering'
|d$word == 'remarking'
|d$word == 'speaking'
|d$word == 'telling'
|d$word == 'uttering'
|d$word == 'murmuring'
|d$word == 'reciting'
|d$word == 'humming'
|d$word == 'saying',
'lvn', ifelse(
d$word == 'tasting'
|d$word == 'biting'
|d$word == 'chewing'
|d$word == 'coughing'
|d$word == 'eating'
|d$word == 'frowning'
|d$word == 'grinning'
|d$word == 'licking'
|d$word == 'puckering'
|d$word == 'smiling'
|d$word == 'smirking'
|d$word == 'whistling',
'm', d$Condition)
)
)
)
)
d$Condition2 <- as.factor(d$Condition2)
d$Condition3 <- ifelse(d$Condition2 == '1', "Filler",
ifelse(d$Condition2 == '2', "Foot",
ifelse(d$Condition2 == 'hvn' | d$Condition2 == 'hv', "High Vocal",
ifelse(d$Condition2 == 'lv' | d$Condition2== 'lvn', "Low Vocal",
ifelse(d$Condition2=="m", "Mouth",'x')))))
d$Condition3 <- factor(d$Condition3, c("Filler", "Foot", "Mouth", "Low Vocal", "High Vocal"))
d$Condition4 = ifelse(d$Condition == 'V', 'V', ifelse(d$Condition3 == 'Mouth', "M", "other"))
d$Condition4<- as.factor(d$Condition4)
#####################
#STATS
### Set up contrasts
#constrast code gender, mean centered
counttotal = length(d$Gender)
countM = length(d$Gender[d$Gender=='m'])
countF = length(d$Gender[d$Gender=='f'])
weightF = countM/counttotal
weightM = countF/counttotal
contrasts(d$Gender) <- cbind(c(weightF,-1*weightM))
contrasts(d$Gender) # display to check
m6s= lmer(TargetIntensity ~  Condition + Gender + Lg10WF + (1+Condition|Subject) + (1|Item), REML=FALSE, data=d_crit) #<-- this is the best model
m1= lmer(TargetIntensity ~ Condition + (1|Subject) + (1|Item), REML=FALSE, data=d_crit)
library(lme4)
m1= lmer(TargetIntensity ~ Condition + (1|Subject) + (1|Item), REML=FALSE, data=d_crit)
?data_crit
data_crit
# (1) P vs. V -- Analyis #1 in paper
d_crit = subset(d, d$Condition!='F')
d_crit$Condition = factor(d_crit$Condition, levels = c("V","P"))
m6s= lmer(TargetIntensity ~  Condition + Gender + Lg10WF + (1+Condition|Subject) + (1|Item), REML=FALSE, data=d_crit) #<-- this is the best model
summary(m6s)
summary(all_6s) #Best model
all_6s= lmer(TargetIntensity ~  Condition3 + Gender + Lg10WF + (1+Condition3|Subject) + (1|Item), REML=FALSE, data=d_crit2)  #<-- this is the best model
# (7) P vs. M vs. V
d_crit2$Condition5 <- ifelse(d_crit2$Condition3 == "High Vocal", "Vocal",
ifelse(d_crit2$Condition3 == "Low Vocal", "Vocal",
ifelse(d_crit2$Condition3 == "Mouth", "Mouth",
ifelse (d_crit2$Condition3 == "Foot", "Foot", "x"))))
d_crit2$Condition5 <- factor(d_crit2$Condition5, levels = c("Foot","Mouth", "Vocal"))
contrasts(d_crit2$Condition5) = contr.helmert
# (6) P vs. L vs. H
d_crit5 = subset(d, d$Condition3!='Filler')
d_crit5 = subset(d_crit5, d_crit5$Condition3!='Mouth')
d_crit5$Condition3 = factor(d_crit5$Condition3)
contrasts(d_crit5$Condition3) = contr.helmert
# (7) P vs. M vs. V
d_crit2$Condition5 <- ifelse(d_crit2$Condition3 == "High Vocal", "Vocal",
ifelse(d_crit2$Condition3 == "Low Vocal", "Vocal",
ifelse(d_crit2$Condition3 == "Mouth", "Mouth",
ifelse (d_crit2$Condition3 == "Foot", "Foot", "x"))))
d_crit2$Condition5 <- factor(d_crit2$Condition5, levels = c("Foot","Mouth", "Vocal"))
contrasts(d_crit2$Condition5) = contr.helmert
# (2) Foot  vs. Mouth  vs. Low Vocal vs. High Vocal  -- Analysis #2 in paper
d_crit2 = subset(d, d$Condition3!='Filler')
d_crit2$Condition3 = factor(d_crit2$Condition3)
d_crit2$Item = factor(d_crit2$Item)
contrasts(d_crit2$Condition3) = contr.helmert
# (3) F vs. P vs. V
contrasts(d$Condition) = contr.helmert
# (4) V vs. M
d_crit3 = subset(d, d$Condition4 != "other")
d_crit3$Condition4 = factor(d_crit3$Condition4)
contrasts(d_crit3$Condition4) # display to check
# (5) P vs. F
d_crit4 = subset(d, d$Condition!='V')
#d_crit4 = subset(d_crit4, d_crit4$filler_activity!='high')
d_crit4 = subset(d_crit4, d_crit4$Condition4 != "M")
d_crit4$Condition = factor(d_crit4$Condition, levels = c("F","P")) # weight by number of items -> doesn't matter
# (6) P vs. L vs. H
d_crit5 = subset(d, d$Condition3!='Filler')
d_crit5 = subset(d_crit5, d_crit5$Condition3!='Mouth')
d_crit5$Condition3 = factor(d_crit5$Condition3)
contrasts(d_crit5$Condition3) = contr.helmert
# (7) P vs. M vs. V
d_crit2$Condition5 <- ifelse(d_crit2$Condition3 == "High Vocal", "Vocal",
ifelse(d_crit2$Condition3 == "Low Vocal", "Vocal",
ifelse(d_crit2$Condition3 == "Mouth", "Mouth",
ifelse (d_crit2$Condition3 == "Foot", "Foot", "x"))))
d_crit2$Condition5 <- factor(d_crit2$Condition5, levels = c("Foot","Mouth", "Vocal"))
contrasts(d_crit2$Condition5) = contr.helmert
all_6s= lmer(TargetIntensity ~  Condition3 + Gender + Lg10WF + (1+Condition3|Subject) + (1|Item), REML=FALSE, data=d_crit2)  #<-- this is the best model
summary(all_6s) #Best model
##Activity 7 Analysis
#M.Lewis 2/9/13
rm(list=ls())
#Load libraries
library(lme4)
library(stringr)
library(ggplot2)
library(bootstrap)
theta <- function(x,xdata,na.rm=T) {mean(xdata[x],na.rm=na.rm)}
ci.low <- function(x,na.rm=T) {
mean(x,na.rm=na.rm) - quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,.025,na.rm=na.rm)}
ci.high <- function(x,na.rm=T) {
quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,.975,na.rm=na.rm) - mean(x,na.rm=na.rm)}
##Read in data
setwd('//Documents/CaLL/from work computer/Experiments/Activity/Paper:Presentation/Paper/Language and Cognition/Analysis/data/')
M1 = read.table("A7_results_male1.txt", header = TRUE, fill = TRUE)
M1$gender = 'M'
M2 = read.table("A7_results_male2.txt", header = TRUE, fill = TRUE)
M2$gender = 'M'
F1 = read.table("A7_results_female1.txt", header = TRUE, fill = TRUE)
F1$gender = 'F'
F2 = read.table("A7_results_female2.txt", header = TRUE, fill = TRUE)
F2$gender = 'F'
F3 = read.table("A7_results_female3.txt", header = TRUE, fill = TRUE)
F3$gender = 'F'
#merge all datasets  together
d <- rbind(M1, M2, F1, F2, F3)
#extra condition and item information
d$SubjectNum <- as.factor(sapply(str_split(matrix(sapply(str_split(d$Filename,"S"),function(x) {x[2]})),"-"),function(x){x[1]}))
d$Condition<- as.factor(sapply(str_split(matrix(sapply(str_split(d$Filename,"_"),function(x) {x[2]})),"_"),function(x){x[1]}))
d$TrialNum<- as.factor(sapply(str_split(d$Filename,"N"),function(x) {x[2]}))
d$Distractor<- as.factor(sapply(str_split(matrix(sapply(str_split(d$Filename,"D_"),function(x) {x[2]})),"-"),function(x){x[1]}))
d$Target<- as.factor(sapply(str_split(matrix(sapply(str_split(d$Filename,"T_"),function(x) {x[2]})),"-"),function(x){x[1]}))
d$gender <- as.factor(d$gender)
#add NAs
d$TargetMax <- ifelse(d$TargetMax == '--undefined--', NA, d$TargetMax)
d$TargetMin <- ifelse(d$TargetMin == '--undefined--', NA, d$TargetMin)
d$TargetPitch <- ifelse(d$TargetPitch == '--undefined--', NA, d$TargetPitch)
d$TargetDifference<- ifelse(d$TargetDifference == '--undefined--', NA, d$TargetDifference)
d$TargetIntensity <- as.numeric(as.character(d$TargetIntensity)) #make intensity numeric
#reorder  labels
d$Segmentlabel = factor(d$Segmentlabel, levels = c("o",'co',"p","c","v","pv"))
#levels(d$Segmentlabel) <- c("onset",'\"click on\"','\"the person\"  ','(\"that\'s\")',"verb","post-verb") # for graphing only
#### Stats for paper
#Set up contrast codes
#gender
counttotal = length(d$gender)
countM = length(d$gender[d$gender=='M'])
countF = length(d$gender[d$gender=='F'])
weightF = countM/counttotal
weightM = countF/counttotal
contrasts(d$gender) <- cbind(c(weightF,-1*weightM))
contrasts(d$gender) # display to check
#condition
contrasts(d$Condition) = c(-.5,.5)
contrasts(d$Condition) # check
# PLOTS
mIntensity <- aggregate(TargetIntensity ~ Condition + Segmentlabel, d, mean)
mIntensity$cih <- aggregate(TargetIntensity ~ Condition + Segmentlabel, data=d,FUN=ci.high)$TargetIntensity
mIntensity$cil <- aggregate(TargetIntensity ~ Condition + Segmentlabel, data=d,FUN=ci.low)$TargetIntensity
mIntensity$Condition = factor(mIntensity$Condition, levels = c("v", "f"))
levels(mIntensity$Condition) <- c("vocal", "foot")
rect <- data.frame (xmin=2.9, xmax=5.1, ymin=-Inf, ymax=Inf)
pd <- position_dodge(.1) # move them .05 to the left and right
ggplot(mIntensity, aes(x=Segmentlabel, y=TargetIntensity, group=Condition)) +
geom_errorbar(aes(ymin=TargetIntensity-cil, ymax= TargetIntensity+cih),
colour="black", width=.1, position=pd ) +
geom_line(aes(linetype=Condition), position=pd) +
geom_point(position=pd, size=3) +
ggtitle("Experiment 3: Intensity by Sentence Region \n") +
theme_bw(base_size=25)  +
labs (y = "Intensity (dB)", x= "Sentence Region") +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=30, vjust=.7),
axis.ticks = element_line(size = 1),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black', size = 1.1),
plot.title = element_text(size=12, face="bold")) +
geom_rect(aes(xmin=2.9, xmax=5.1, ymin=-Inf, ymax=Inf),
color="grey",
alpha = .01,
size = 0, show_guide=FALSE)
pdf("/Users/mll/Desktop/Lewis_Fig3.pdf" ,width = 9, height = 6)
dev.off()
pdf("/Users/mll/Desktop/Lewis_Fig3.pdf" ,width = 9, height = 6)
pd <- position_dodge(.1) # move them .05 to the left and right
ggplot(mIntensity, aes(x=Segmentlabel, y=TargetIntensity, group=Condition)) +
geom_errorbar(aes(ymin=TargetIntensity-cil, ymax= TargetIntensity+cih),
colour="black", width=.1, position=pd ) +
geom_line(aes(linetype=Condition), position=pd) +
geom_point(position=pd, size=3) +
ggtitle("Experiment 3: Intensity by Sentence Region \n") +
theme_bw(base_size=25)  +
labs (y = "Intensity (dB)", x= "Sentence Region") +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=30, vjust=.7),
axis.ticks = element_line(size = 1),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black', size = 1.1),
plot.title = element_text(size=12, face="bold")) +
geom_rect(aes(xmin=2.9, xmax=5.1, ymin=-Inf, ymax=Inf),
color="grey",
alpha = .01,
size = 0, show_guide=FALSE)
# qplot(data=mIntensity,
#       y=TargetIntensity,
#       x=Segmentlabel,
#       group=Condition,
#       ymin=TargetIntensity-cil,
#       ymax=TargetIntensity+cih
#       geom=c("point", "errorbar", "line"),
#       linetype=Condition,
#       width=0.2) +
#   ggtitle("Experiment 3: Intensity by Sentence Region \n") +
#   theme_bw(base_size=25)  +
#   labs (y = "Intensity (dB)", x= "Sentence Region") +
#   theme(text = element_text(size=20),
#         axis.text.x = element_text(angle=30, vjust=.7),
#         axis.ticks = element_line(size = 1),
#         plot.background = element_blank(),
#         panel.grid.major = element_blank(),
#         panel.grid.minor = element_blank(),
#         panel.border = element_blank(),
#         axis.line = element_line(color = 'black', size = 1.1),
#         plot.title = element_text(size=12, face="bold")) +
#   geom_rect(aes(xmin=2.9, xmax=5.1, ymin=-Inf, ymax=Inf),
#             color="grey",
#             alpha = .01,
#             size = 0, show_guide=FALSE)
dev.off()
levels(d$Segmentlabel) <- c("onset",'\"click on\"','\"the person\"  ','(\"that\'s\")',"verb","post-verb") # for graphing only
pdf("/Users/mll/Desktop/Lewis_Fig3.pdf" ,width = 9, height = 6)
pd <- position_dodge(.1) # move them .05 to the left and right
ggplot(mIntensity, aes(x=Segmentlabel, y=TargetIntensity, group=Condition)) +
geom_errorbar(aes(ymin=TargetIntensity-cil, ymax= TargetIntensity+cih),
colour="black", width=.1, position=pd ) +
geom_line(aes(linetype=Condition), position=pd) +
geom_point(position=pd, size=3) +
ggtitle("Experiment 3: Intensity by Sentence Region \n") +
theme_bw(base_size=25)  +
labs (y = "Intensity (dB)", x= "Sentence Region") +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=30, vjust=.7),
axis.ticks = element_line(size = 1),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black', size = 1.1),
plot.title = element_text(size=12, face="bold")) +
geom_rect(aes(xmin=2.9, xmax=5.1, ymin=-Inf, ymax=Inf),
color="grey",
alpha = .01,
size = 0, show_guide=FALSE)
# qplot(data=mIntensity,
#       y=TargetIntensity,
#       x=Segmentlabel,
#       group=Condition,
#       ymin=TargetIntensity-cil,
#       ymax=TargetIntensity+cih
#       geom=c("point", "errorbar", "line"),
#       linetype=Condition,
#       width=0.2) +
#   ggtitle("Experiment 3: Intensity by Sentence Region \n") +
#   theme_bw(base_size=25)  +
#   labs (y = "Intensity (dB)", x= "Sentence Region") +
#   theme(text = element_text(size=20),
#         axis.text.x = element_text(angle=30, vjust=.7),
#         axis.ticks = element_line(size = 1),
#         plot.background = element_blank(),
#         panel.grid.major = element_blank(),
#         panel.grid.minor = element_blank(),
#         panel.border = element_blank(),
#         axis.line = element_line(color = 'black', size = 1.1),
#         plot.title = element_text(size=12, face="bold")) +
#   geom_rect(aes(xmin=2.9, xmax=5.1, ymin=-Inf, ymax=Inf),
#             color="grey",
#             alpha = .01,
#             size = 0, show_guide=FALSE)
dev.off()
ggplot(mIntensity, aes(x=Segmentlabel, y=TargetIntensity, group=Condition)) +
geom_errorbar(aes(ymin=TargetIntensity-cil, ymax= TargetIntensity+cih),
colour="black", width=.1, position=pd ) +
geom_line(aes(linetype=Condition), position=pd) +
geom_point(position=pd, size=3) +
ggtitle("Experiment 3: Intensity by Sentence Region \n") +
theme_bw(base_size=25)  +
labs (y = "Intensity (dB)", x= "Sentence Region") +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=30, vjust=.7),
axis.ticks = element_line(size = 1),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black', size = 1.1),
plot.title = element_text(size=12, face="bold")) +
geom_rect(aes(xmin=2.9, xmax=5.1, ymin=-Inf, ymax=Inf),
color="grey",
alpha = .01,
size = 0, show_guide=FALSE)
# PLOTS
mIntensity <- aggregate(TargetIntensity ~ Condition + Segmentlabel, d, mean)
mIntensity$cih <- aggregate(TargetIntensity ~ Condition + Segmentlabel, data=d,FUN=ci.high)$TargetIntensity
mIntensity$cil <- aggregate(TargetIntensity ~ Condition + Segmentlabel, data=d,FUN=ci.low)$TargetIntensity
mIntensity$Condition = factor(mIntensity$Condition, levels = c("v", "f"))
levels(mIntensity$Condition) <- c("vocal", "foot")
rect <- data.frame (xmin=2.9, xmax=5.1, ymin=-Inf, ymax=Inf)
pdf("/Users/mll/Desktop/Lewis_Fig3.pdf" ,width = 9, height = 6)
pd <- position_dodge(.1) # move them .05 to the left and right
ggplot(mIntensity, aes(x=Segmentlabel, y=TargetIntensity, group=Condition)) +
geom_errorbar(aes(ymin=TargetIntensity-cil, ymax= TargetIntensity+cih),
colour="black", width=.1, position=pd ) +
geom_line(aes(linetype=Condition), position=pd) +
geom_point(position=pd, size=3) +
ggtitle("Experiment 3: Intensity by Sentence Region \n") +
theme_bw(base_size=25)  +
labs (y = "Intensity (dB)", x= "Sentence Region") +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=30, vjust=.7),
axis.ticks = element_line(size = 1),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black', size = 1.1),
plot.title = element_text(size=12, face="bold")) +
geom_rect(aes(xmin=2.9, xmax=5.1, ymin=-Inf, ymax=Inf),
color="grey",
alpha = .01,
size = 0, show_guide=FALSE)
# qplot(data=mIntensity,
#       y=TargetIntensity,
#       x=Segmentlabel,
#       group=Condition,
#       ymin=TargetIntensity-cil,
#       ymax=TargetIntensity+cih
#       geom=c("point", "errorbar", "line"),
#       linetype=Condition,
#       width=0.2) +
#   ggtitle("Experiment 3: Intensity by Sentence Region \n") +
#   theme_bw(base_size=25)  +
#   labs (y = "Intensity (dB)", x= "Sentence Region") +
#   theme(text = element_text(size=20),
#         axis.text.x = element_text(angle=30, vjust=.7),
#         axis.ticks = element_line(size = 1),
#         plot.background = element_blank(),
#         panel.grid.major = element_blank(),
#         panel.grid.minor = element_blank(),
#         panel.border = element_blank(),
#         axis.line = element_line(color = 'black', size = 1.1),
#         plot.title = element_text(size=12, face="bold")) +
#   geom_rect(aes(xmin=2.9, xmax=5.1, ymin=-Inf, ymax=Inf),
#             color="grey",
#             alpha = .01,
#             size = 0, show_guide=FALSE)
dev.off()
